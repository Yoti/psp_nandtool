//copies to first page byte 446,  0x55 AA copied to 510
u8 ident[2] = {0x55,0xAA};
//phat PSP aka 32MiB
//static unsigned char dump[] __attribute__((aligned(16)))
static unsigned char phat_data[192] __attribute__((aligned(16)))= {
//00 00
0x00, 0x00, 0x01, 0x01, 0x05, 0x01, 0xE0, 0xBE, 0x40, 0x00, 0x00,
0x00, 0x80, 0xEF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//00 02
0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0xE0, 0x00, 0x20, 0x00, 0x00,
0x00, 0xE0, 0xBF, 0x00, 0x00, 0x00, 0x00, 0xC1, 0x01, 0x05, 0x01,
0xE0, 0x80, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00,
//06 02
0x00, 0x01, 0xC1, 0x01, 0x01, 0x01, 0xE0, 0x80, 0x20, 0x00, 0x00,
0x00, 0xE0, 0x1F, 0x00, 0x00, 0x00, 0x00, 0xC1, 0x81, 0x05, 0x01,
0xE0, 0xA0, 0x00, 0xE0, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00,
//07 02
0x00, 0x01, 0xC1, 0x81, 0x01, 0x01, 0xE0, 0xA0, 0x20, 0x00, 0x00,
0x00, 0xE0, 0x07, 0x00, 0x00, 0x00, 0x00, 0xC1, 0xA1, 0x05, 0x01,
0xE0, 0xBE, 0x00, 0xE8, 0x00, 0x00, 0x80, 0x07, 0x00, 0x00,
//07 42
0x00, 0x01, 0xC1, 0xA1, 0x01, 0x01, 0xE0, 0xBE, 0x20, 0x00, 0x00,
0x00, 0x60, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//07 7E
0x00, 0x01, 0xC1, 0xBF, 0x01, 0x01, 0xE0, 0xBE, 0x20, 0x00, 0x00,
0x00, 0xE0, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

//slim PSP aka 64MiB
static unsigned char slim_data[224] __attribute__((aligned(16)))= {
//00 00
0x00, 0x00, 0x01, 0x01, 0x0F, 0x01, 0xE0, 0xFF, 0x40, 0x00, 0x00,
0x00, 0x80, 0xDF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//00 02
//0x00, 0x01, 0x01, 0x01, 0x0E, 0x01, 0xE0, 0xFF, 0x20, 0x00, 0x00,
//0x00, 0xE0, 0x47, 0x01, 0x00, 0x00, 0x01, 0xE0, 0xFF, 0x05, 0x01,
//0xE0, 0xFF, 0x00, 0x48, 0x01, 0x00, 0x00, 0x28, 0x00, 0x00,
0x00, 0x01, 0x01, 0x01, 0x0E, 0x01, 0xE0, 0xFF, 0x20, 0x00, 0x00,
0x00, 0xE0, 0x47, 0x01, 0x00, 0x00, 0x00, 0xC1, 0xFF, 0x0F, 0x01,
0xE0, 0xFF, 0x00, 0x48, 0x01, 0x00, 0x00, 0x28, 0x00, 0x00,

//0A 42
//0x00, 0x01, 0xE0, 0xFF, 0x0E, 0x01, 0xE0, 0xFF, 0x20, 0x00, 0x00,
//0x00, 0xE0, 0x27, 0x00, 0x00, 0x00, 0x01, 0xE0, 0xFF, 0x05, 0x01,
//0xE0, 0xFF, 0x00, 0x70, 0x01, 0x00, 0x00, 0x20, 0x00, 0x00, 
0x00, 0x01, 0xC1, 0xFF, 0x0E, 0x01, 0xE0, 0xFF, 0x20, 0x00, 0x00,
0x00, 0xE0, 0x27, 0x00, 0x00, 0x00, 0x00, 0xC1, 0xFF, 0x0F, 0x01,
0xE0, 0xFF, 0x00, 0x70, 0x01, 0x00, 0x00, 0x20, 0x00, 0x00,

//0B 82
//0x00, 0x01, 0xE0, 0xFF, 0x0E, 0x01, 0xE0, 0xFF, 0x20, 0x00, 0x00,
//0x00, 0xE0, 0x1F, 0x00, 0x00, 0x00, 0x01, 0xE0, 0xFF, 0x05, 0x01,
//0xE0, 0xFF, 0x00, 0x90, 0x01, 0x00, 0x00, 0x49, 0x00, 0x00,
0x00, 0x01, 0xC1, 0xFF, 0x0E, 0x01, 0xE0, 0xFF, 0x20, 0x00, 0x00,
0x00, 0xE0, 0x1F, 0x00, 0x00, 0x00, 0x00, 0xC1, 0xFF, 0x0F, 0x01,
0xE0, 0xFF, 0x00, 0x90, 0x01, 0x00, 0x00, 0x49, 0x00, 0x00,

//0C 82
//0x00, 0x01, 0xE0, 0xFF, 0x0E, 0x01, 0xE0, 0xFF, 0x20, 0x00, 0x00,
//0x00, 0xE0, 0x48, 0x00, 0x00, 0x00, 0x01, 0xE0, 0xFF, 0x05, 0x01,
//0xE0, 0xFF, 0x00, 0xD9, 0x01, 0x00, 0x80, 0x06, 0x00, 0x00,
0x00, 0x01, 0xC1, 0xFF, 0x0E, 0x01, 0xE0, 0xFF, 0x20, 0x00, 0x00,
0x00, 0xE0, 0x48, 0x00, 0x00, 0x00, 0x00, 0xC1, 0xFF, 0x0F, 0x01,
0xE0, 0xFF, 0x00, 0xD9, 0x01, 0x00, 0x80, 0x06, 0x00, 0x00,

//0E CA
//0x00, 0x01, 0xE0, 0xFF, 0x0E, 0x01, 0xE0, 0xFF, 0x20, 0x00, 0x00,
//0x00, 0x60, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
0x00, 0x01, 0xC1, 0xFF, 0x0E, 0x01, 0xE0, 0xFF, 0x20, 0x00, 0x00,
0x00, 0x60, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

//0E FE
0x00, 0x01, 0xC1, 0xFF, 0x0E, 0x01, 0xE0, 0xFF, 0x20, 0x00, 0x00,
0x00, 0xE0, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
